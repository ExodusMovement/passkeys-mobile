plugins {
    id 'com.android.library' version '8.6.1'
    id 'org.jetbrains.kotlin.android' version '1.9.24'
    id "com.vanniktech.maven.publish" version "0.30.0"
    id 'signing'
}

import com.vanniktech.maven.publish.SonatypeHost

def libraryVersion = '1.3.0'

android {
    namespace 'network.passkeys.client'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34
        versionName libraryVersion
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    libraryVariants.all { variant ->
        if (variant.name == "release") {
            variant.outputs.all { output ->
                outputFileName = "mobile-${libraryVersion}.aar"
            }
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation "androidx.browser:browser:1.5.0"
}

repositories {
    google()
    mavenCentral()
}

mavenPublishing {
    coordinates('network.passkeys', 'client', libraryVersion)

    pom {
        name.set("Passkeys Mobile Library")
        description.set("Passkeys is used to interact with my.passkeys.network crypto signer. Checkout passkeys.foundation for more details.")
        inceptionYear.set("2024")
        url.set("https://github.com/ExodusMovement/passkeys-mobile")

        licenses {
            license {
                name.set("MIT")
                url.set("https://opensource.org/licenses/MIT")
            }
        }

        developers {
            developer {
                id.set("ExodusMovement")
                name.set("ExodusMovement")
                email.set("devs@exodus.io")
            }
        }

        scm {
            connection.set("scm:git:git://github.com/ExodusMovement/passkeys-mobile.git")
            developerConnection.set("scm:git:ssh://git@github.com/ExodusMovement/passkeys-mobile.git")
            url.set("https://github.com/ExodusMovement/passkeys-mobile")
        }
    }

    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
}

afterEvaluate {
    signing {
        useGpgCmd()
        publishing.publications.withType(MavenPublication).all { publication ->
            sign(publication)
        }
    }
}